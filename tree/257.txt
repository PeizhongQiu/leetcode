/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> result;
        if(!root) return result;
        if(!root->left&&!root->right){
            string temp=to_string(root->val);
            result.push_back(temp);
            return result;
        }
        vector<string>left(binaryTreePaths(root->left));
        vector<string>right(binaryTreePaths(root->right));
        for(int i=0;i<left.size();i++){
            string temp=to_string(root->val)+"->"+left[i];
            result.push_back(temp);
        }
        for(int i=0;i<right.size();i++){
            string temp=to_string(root->val)+"->"+right[i];
            result.push_back(temp);
        }
        return result;
    }
};
